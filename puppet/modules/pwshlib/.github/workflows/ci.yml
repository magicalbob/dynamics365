name: CI

on:
  pull_request:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

jobs:
  rubocop:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-latest
          - ubuntu-latest
        ruby: ["2.7"]
    steps:
      - name: Checkout Source
        uses: actions/checkout@v2
      - name: Activate Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true
      - name: Print Test Environment
        run: |
          ruby -v
          gem -v
          bundle -v
          pwsh -v
      - name: Run Rubocop Tests
        run: |
          bundle exec rake rubocop
  spec:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-latest
          - windows-2016
          - ubuntu-latest
          - ubuntu-18.04
        ruby: ["2.5", "2.7"]
    steps:
      - name: Checkout Source
        uses: actions/checkout@v2
      - name: Activate Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true
      - name: Print Test Environment
        run: |
          ruby -v
          gem -v
          bundle -v
          pwsh -v
      - name: Run Spec Tests
        run: |
          bundle exec rake spec
  acceptance-dsc:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-latest
          - windows-2016
        puppet:
          - 6
          - 7
        include:
          - puppet: 6
            ruby: 2.5
          - puppet: 7
            ruby: 2.7
    env:
      PUPPET_GEM_VERSION: ${{ matrix.puppet }}
    steps:
      - name: Checkout Source
        uses: actions/checkout@v2
      - name: Activate Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true
      - name: Print Test Environment
        run: |
          ruby -v
          gem -v
          bundle -v
          pwsh -v
      - name: Ensure WinRM is working
        shell: powershell
        run: |
          Get-ChildItem WSMan:\localhost\Listener\ -OutVariable Listeners | Format-List * -Force
          $HTTPListener = $Listeners | Where-Object -FilterScript { $_.Keys.Contains('Transport=HTTP') }
          If ($HTTPListener.Count -eq 0) {
            winrm create winrm/config/Listener?Address=*+Transport=HTTP
            winrm e winrm/config/listener
          }
      - name: Run Acceptance Tests
        shell: powershell
        run: |
          bundle exec rake dsc:acceptance:spec_prep
          bundle exec rake dsc:acceptance:spec
