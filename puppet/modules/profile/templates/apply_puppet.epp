<%- | String $ad_domain_url,
      String $redis_ip,
      String $redis_pass
| -%>
Write-EventLog -LogName "Application" -Source "Puppet" -EventID 1 -EntryType Information -Message "apply_puppet started."

[Environment]::SetEnvironmentVariable("FACTERLIB","c:\programdata\puppetlabs\code\environments\production\facter","Machine")

if (!(Test-Path c:\scripts\prefix)) {
  $prefix=''
  while (!($prefix -match "^[\d\.]+$")) {
    $prefix=(echo "AUTH <%= $redis_pass %>" ` "GET prefix" | nc -w 1 <%= $redis_ip %> 6379)
    $prefix = ($prefix -match "^[\d]+$" )
    if (!( "$prefix" -match "^[\d]+$" )) {
      $prefix=''
    } else {
      echo $prefix > c:\scripts\prefix
    }
  }
}

$machine_name = hostname
if ($machine_name -Like "WIN*") {
  # Make sure flagman in place and prefix set
  puppet apply -e "include flagman"

  Install-PackageProvider -Name NuGet -MinimumVersion 2.8.5.201 -Force

  $getMachineNameTries=0

  while ($machine_name -Like "WIN*") {
    # get MAC of ethernet
    $mac = (Get-NetAdapter "Ethernet 2").MacAddress -replace '-',''
    # look up the mac address in redis to find name of machine
    $got_name = (c:\scripts\flagmanget.ps1 -Name $mac)
    # if found, put puppet code back in place, rename the computer to the got name and restart
    if ( $got_name.length -like 3 ) {
      echo "Not found"
      $getMachineNameTries++
      if ( $getMachineNameTries -gt 3 ) {
        remove-item -path c:\scripts\prefix -force
        restart-computer -force
      }
    } else {
      rename-computer $got_name -force
      restart-computer -force
    }
    # otherwise get the machine_name again to make sure it has not changed
    $machine_name = hostname
  }
}

# if vagrant shared folder exists visit it
cmd /c if exist \\vboxsrv\vagrant start /b /min \\vboxsrv\vagrant
while (!(Test-Path "c:\programdata\puppetlabs\code\environments\production\manifests\site.pp")) { Start-Sleep 10 }
# wait for vagrant to set the machine name if this is vagrant
while ($machine_name -Like "VAGRANT*") {
  $machine_name = hostname
}

# set the FQDN in the registry
Set-ItemProperty "HKLM:\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\" -Name Domain -Value "<%= $ad_domain_url %>"

# if this is the active directory machine set its IP in redis for the other machines
if ($machine_name -Like "DYNAD") {
  # This might have already been done, but no harm doing it again
  puppet apply -e "include flagman"

  $ad_ip=(Get-NetIPAddress -InterfaceAlias "Ethernet 2").IPAddress
  c:\scripts\flagmanset.ps1 -Name ad_ip -Value $ad_ip
}

# Set flag that machine build has started, to true, for locking
c:\scripts\flagmanset.ps1 -Name ${machine_name}_started -Value true

Write-EventLog -LogName "Application" -Source "Puppet" -EventID 1 -EntryType Information -Message "apply_puppet applying puppet"
puppet apply --verbose --logdest eventlog c:\programdata\puppetlabs\code\environments\production\manifests\site.pp
